{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport DeleteMovieDialog from '../DeleteMovieDialog';\nimport UpdateMovieDialog from '../UpdateMovieDialog';\nimport styles from '../movies.module.scss';\n\nvar MovieCard = function MovieCard(_ref) {\n  _s();\n\n  var _movie$release_date, _movie$genres;\n\n  var movie = _ref.movie,\n      updateMovie = _ref.updateMovie,\n      deleteMovie = _ref.deleteMovie;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      anchorEl = _useState2[0],\n      setAnchorEl = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openDelete = _useState4[0],\n      setOpenDelete = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openEdit = _useState6[0],\n      setOpenEdit = _useState6[1];\n\n  var handleClick = function handleClick(e) {\n    setAnchorEl(e.currentTarget);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  var onEditMenuItemClick = function onEditMenuItemClick() {\n    handleClose();\n    setOpenEdit(true);\n  };\n\n  var onDeleteMenuItemClick = function onDeleteMenuItemClick() {\n    handleClose();\n    setOpenDelete(true);\n  };\n\n  var onDeleteMovie = function onDeleteMovie(movieId) {\n    deleteMovie(movieId);\n    setOpenDelete(false);\n  };\n\n  var onUpdateMovie = function onUpdateMovie(m) {\n    updateMovie(m);\n    setOpenEdit(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"movieCard\"\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/movies/\".concat(movie === null || movie === void 0 ? void 0 : movie.id)\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: movie === null || movie === void 0 ? void 0 : movie.poster_path,\n    alt: \"\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movieInfo\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"infoFirstRow\"\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\"\n  }, movie === null || movie === void 0 ? void 0 : movie.title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"movieReleaseYear\"\n  }, movie === null || movie === void 0 ? void 0 : (_movie$release_date = movie.release_date) === null || _movie$release_date === void 0 ? void 0 : _movie$release_date.split('-')[0])), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"genre\"\n  }, movie === null || movie === void 0 ? void 0 : (_movie$genres = movie.genres) === null || _movie$genres === void 0 ? void 0 : _movie$genres.join(', '))), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"card-menu-icon\",\n    \"aria-controls\": \"simple-menu\",\n    \"aria-haspopup\": \"true\",\n    onClick: handleClick\n  }, /*#__PURE__*/React.createElement(MoreVertIcon, null)), /*#__PURE__*/React.createElement(Menu, {\n    id: \"simple-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: onEditMenuItemClick,\n    className: \"card-menu-item\"\n  }, \"edit\"), /*#__PURE__*/React.createElement(MenuItem, {\n    onClick: onDeleteMenuItemClick,\n    className: \"card-menu-item\"\n  }, \"delete\"), /*#__PURE__*/React.createElement(UpdateMovieDialog, {\n    open: openEdit,\n    movie: movie,\n    onUpdate: onUpdateMovie,\n    onClose: function onClose() {\n      return setOpenEdit(false);\n    }\n  }), /*#__PURE__*/React.createElement(DeleteMovieDialog, {\n    open: openDelete,\n    movieId: movie === null || movie === void 0 ? void 0 : movie.id,\n    onDelete: onDeleteMovie,\n    onClose: function onClose() {\n      return setOpenDelete(false);\n    }\n  })));\n};\n\n_s(MovieCard, \"bkqdM8OSGsNeU8/CPKBpGN/ngG0=\");\n\n_c = MovieCard;\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.string),\n    vote_average: PropTypes.number,\n    tagline: PropTypes.string,\n    vote_count: PropTypes.number,\n    overview: PropTypes.string,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n    runtime: PropTypes.number\n  }).isRequired,\n  updateMovie: PropTypes.func.isRequired,\n  deleteMovie: PropTypes.func.isRequired\n};\nexport default MovieCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieCard\");","map":{"version":3,"sources":["C:/projects/react-trainings/react-movies/src/components/body/movieList/movieCard/MovieCard.js"],"names":["React","useState","IconButton","Menu","MenuItem","MoreVertIcon","PropTypes","Link","DeleteMovieDialog","UpdateMovieDialog","styles","MovieCard","movie","updateMovie","deleteMovie","anchorEl","setAnchorEl","openDelete","setOpenDelete","openEdit","setOpenEdit","handleClick","e","currentTarget","handleClose","onEditMenuItemClick","onDeleteMenuItemClick","onDeleteMovie","movieId","onUpdateMovie","m","id","poster_path","title","release_date","split","genres","join","Boolean","propTypes","shape","number","isRequired","string","arrayOf","vote_average","tagline","vote_count","overview","budget","revenue","runtime","func"],"mappings":";;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyC;AAAA;;AAAA;;AAAA,MAAtCC,KAAsC,QAAtCA,KAAsC;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBACzBb,QAAQ,CAAC,IAAD,CADiB;AAAA;AAAA,MAClDc,QADkD;AAAA,MACxCC,WADwC;;AAAA,mBAErBf,QAAQ,CAAC,KAAD,CAFa;AAAA;AAAA,MAElDgB,UAFkD;AAAA,MAEtCC,aAFsC;;AAAA,mBAGzBjB,QAAQ,CAAC,KAAD,CAHiB;AAAA;AAAA,MAGlDkB,QAHkD;AAAA,MAGxCC,WAHwC;;AAKzD,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AACzBN,IAAAA,WAAW,CAACM,CAAC,CAACC,aAAH,CAAX;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,MAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCD,IAAAA,WAAW;AACXJ,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,MAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClCF,IAAAA,WAAW;AACXN,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,MAAMS,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD,EAAa;AACjCd,IAAAA,WAAW,CAACc,OAAD,CAAX;AACAV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,MAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AAC3BjB,IAAAA,WAAW,CAACiB,CAAD,CAAX;AACAV,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,sBACE;AAAI,IAAA,SAAS,EAAC;AAAd,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,oBAAaR,KAAb,aAAaA,KAAb,uBAAaA,KAAK,CAAEmB,EAApB;AAAR,kBACE;AAAK,IAAA,GAAG,EAAEnB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEoB,WAAjB;AAA8B,IAAA,GAAG,EAAC;AAAlC,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAG,IAAA,SAAS,EAAC;AAAb,KAAsBpB,KAAtB,aAAsBA,KAAtB,uBAAsBA,KAAK,CAAEqB,KAA7B,CADF,eAEE;AAAG,IAAA,SAAS,EAAC;AAAb,KAAiCrB,KAAjC,aAAiCA,KAAjC,8CAAiCA,KAAK,CAAEsB,YAAxC,wDAAiC,oBAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAjC,CAFF,CADF,eAKE;AAAG,IAAA,SAAS,EAAC;AAAb,KAAsBvB,KAAtB,aAAsBA,KAAtB,wCAAsBA,KAAK,CAAEwB,MAA7B,kDAAsB,cAAeC,IAAf,CAAoB,IAApB,CAAtB,CALF,CAJF,eAWE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAuC,qBAAc,aAArD;AAAmE,qBAAc,MAAjF;AAAwF,IAAA,OAAO,EAAEhB;AAAjG,kBACE,oBAAC,YAAD,OADF,CAXF,eAcE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,aAAT;AAAuB,IAAA,QAAQ,EAAEN,QAAjC;AAA2C,IAAA,WAAW,MAAtD;AAAuD,IAAA,IAAI,EAAEuB,OAAO,CAACvB,QAAD,CAApE;AAAgF,IAAA,OAAO,EAAES;AAAzF,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEC,mBAAnB;AAAwC,IAAA,SAAS,EAAC;AAAlD,YADF,eAIE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEC,qBAAnB;AAA0C,IAAA,SAAS,EAAC;AAApD,cAJF,eAOE,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEP,QAAzB;AAAmC,IAAA,KAAK,EAAEP,KAA1C;AAAiD,IAAA,QAAQ,EAAEiB,aAA3D;AAA0E,IAAA,OAAO,EAAE;AAAA,aAAMT,WAAW,CAAC,KAAD,CAAjB;AAAA;AAAnF,IAPF,eAQE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAEH,UADR;AAEE,IAAA,OAAO,EAAEL,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEmB,EAFlB;AAGE,IAAA,QAAQ,EAAEJ,aAHZ;AAIE,IAAA,OAAO,EAAE;AAAA,aAAMT,aAAa,CAAC,KAAD,CAAnB;AAAA;AAJX,IARF,CAdF,CADF;AAgCD,CAjED;;GAAMP,S;;KAAAA,S;AAmENA,SAAS,CAAC4B,SAAV,GAAsB;AACpB3B,EAAAA,KAAK,EAAEN,SAAS,CAACkC,KAAV,CAAgB;AACrBT,IAAAA,EAAE,EAAEzB,SAAS,CAACmC,MAAV,CAAiBC,UADA;AAErBT,IAAAA,KAAK,EAAE3B,SAAS,CAACqC,MAAV,CAAiBD,UAFH;AAGrBV,IAAAA,WAAW,EAAE1B,SAAS,CAACqC,MAHF;AAIrBT,IAAAA,YAAY,EAAE5B,SAAS,CAACqC,MAJH;AAKrBP,IAAAA,MAAM,EAAE9B,SAAS,CAACsC,OAAV,CAAkBtC,SAAS,CAACqC,MAA5B,CALa;AAMrBE,IAAAA,YAAY,EAAEvC,SAAS,CAACmC,MANH;AAOrBK,IAAAA,OAAO,EAAExC,SAAS,CAACqC,MAPE;AAQrBI,IAAAA,UAAU,EAAEzC,SAAS,CAACmC,MARD;AASrBO,IAAAA,QAAQ,EAAE1C,SAAS,CAACqC,MATC;AAUrBM,IAAAA,MAAM,EAAE3C,SAAS,CAACmC,MAVG;AAWrBS,IAAAA,OAAO,EAAE5C,SAAS,CAACmC,MAXE;AAYrBU,IAAAA,OAAO,EAAE7C,SAAS,CAACmC;AAZE,GAAhB,EAaJC,UAdiB;AAepB7B,EAAAA,WAAW,EAAEP,SAAS,CAAC8C,IAAV,CAAeV,UAfR;AAgBpB5B,EAAAA,WAAW,EAAER,SAAS,CAAC8C,IAAV,CAAeV;AAhBR,CAAtB;AAmBA,eAAe/B,SAAf","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState } from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport DeleteMovieDialog from '../DeleteMovieDialog';\nimport UpdateMovieDialog from '../UpdateMovieDialog';\n\nimport styles from '../movies.module.scss';\n\nconst MovieCard = ({ movie, updateMovie, deleteMovie }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [openDelete, setOpenDelete] = useState(false);\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleClick = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onEditMenuItemClick = () => {\n    handleClose();\n    setOpenEdit(true);\n  };\n\n  const onDeleteMenuItemClick = () => {\n    handleClose();\n    setOpenDelete(true);\n  };\n\n  const onDeleteMovie = (movieId) => {\n    deleteMovie(movieId);\n    setOpenDelete(false);\n  };\n\n  const onUpdateMovie = (m) => {\n    updateMovie(m);\n    setOpenEdit(false);\n  };\n\n  return (\n    <li className=\"movieCard\">\n      <Link to={`/movies/${movie?.id}`}>\n        <img src={movie?.poster_path} alt=\"\" />\n      </Link>\n      <div className=\"movieInfo\">\n        <div className=\"infoFirstRow\">\n          <p className=\"title\">{movie?.title}</p>\n          <p className=\"movieReleaseYear\">{movie?.release_date?.split('-')[0]}</p>\n        </div>\n        <p className=\"genre\">{movie?.genres?.join(', ')}</p>\n      </div>\n      <IconButton className=\"card-menu-icon\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem onClick={onEditMenuItemClick} className=\"card-menu-item\">\n          edit\n        </MenuItem>\n        <MenuItem onClick={onDeleteMenuItemClick} className=\"card-menu-item\">\n          delete\n        </MenuItem>\n        <UpdateMovieDialog open={openEdit} movie={movie} onUpdate={onUpdateMovie} onClose={() => setOpenEdit(false)} />\n        <DeleteMovieDialog\n          open={openDelete}\n          movieId={movie?.id}\n          onDelete={onDeleteMovie}\n          onClose={() => setOpenDelete(false)}\n        />\n      </Menu>\n    </li>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.string),\n    vote_average: PropTypes.number,\n    tagline: PropTypes.string,\n    vote_count: PropTypes.number,\n    overview: PropTypes.string,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n    runtime: PropTypes.number,\n  }).isRequired,\n  updateMovie: PropTypes.func.isRequired,\n  deleteMovie: PropTypes.func.isRequired,\n};\n\nexport default MovieCard;\n"]},"metadata":{},"sourceType":"module"}