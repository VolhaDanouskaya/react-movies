{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\n\nvar ErrorBoundary = /*#__PURE__*/function (_Component) {\n  _inherits(ErrorBoundary, _Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return /*#__PURE__*/React.createElement(\"h1\", null, \"Something went wrong (\");\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError() {\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(Component);\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["C:/projects/react-trainings/react-movies/src/components/error/ErrorBoundary.js"],"names":["React","Component","ErrorBoundary","props","state","hasError","children"],"mappings":";;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFiB;AAGlB;;;;WAMD,6BAAoB,CAAE;;;WAEtB,kBAAS;AACP,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAyB;AACvB,4BAAO,yDAAP;AACD;;AACD,aAAO,KAAKF,KAAL,CAAWG,QAAlB;AACD;;;WAXD,oCAAkC;AAChC,aAAO;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACD;;;;EARyBJ,S;;AAoB5B,eAAeC,aAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch() {}\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Something went wrong (</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}