{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './body.scss';\nvar genres = ['All', 'Adventure', 'Comedy', 'Drama', 'Fantasy'];\n\nvar GenresFilter = function GenresFilter(_ref) {\n  _s();\n\n  var onFilterClick = _ref.onFilterClick,\n      selectedFilter = _ref.selectedFilter;\n\n  var _useState = useState(selectedFilter),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"genres-filter\"\n  }, genres.map(function (genre) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      key: genre,\n      type: \"button\",\n      onClick: function onClick() {\n        onFilterClick(genre);\n        setSelected(genre);\n      },\n      className: \"item \".concat(genre === selected ? 'active' : '')\n    }, genre);\n  }));\n};\n\n_s(GenresFilter, \"ezb6xqwGYkkmMa2hyBKiN6EqjN4=\");\n\n_c = GenresFilter;\nGenresFilter.propTypes = {\n  onFilterClick: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired\n};\nexport default GenresFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenresFilter\");","map":{"version":3,"sources":["C:/projects/react-trainings/react-movies/src/components/body/GenresFilter.js"],"names":["React","useState","PropTypes","genres","GenresFilter","onFilterClick","selectedFilter","selected","setSelected","map","genre","propTypes","func","isRequired","string"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AAEA,IAAMC,MAAM,GAAG,CAAC,KAAD,EAAQ,WAAR,EAAqB,QAArB,EAA+B,OAA/B,EAAwC,SAAxC,CAAf;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAuC;AAAA;;AAAA,MAApCC,aAAoC,QAApCA,aAAoC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,kBAC1BL,QAAQ,CAACK,cAAD,CADkB;AAAA;AAAA,MACnDC,QADmD;AAAA,MACzCC,WADyC;;AAG1D,sBACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGL,MAAM,CAACM,GAAP,CAAW,UAACC,KAAD;AAAA,wBACV;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAE,mBAAM;AACbL,QAAAA,aAAa,CAACK,KAAD,CAAb;AACAF,QAAAA,WAAW,CAACE,KAAD,CAAX;AACD,OANH;AAOE,MAAA,SAAS,iBAAUA,KAAK,KAAKH,QAAV,GAAqB,QAArB,GAAgC,EAA1C;AAPX,OASGG,KATH,CADU;AAAA,GAAX,CADH,CADF;AAiBD,CApBD;;GAAMN,Y;;KAAAA,Y;AAsBNA,YAAY,CAACO,SAAb,GAAyB;AACvBN,EAAAA,aAAa,EAAEH,SAAS,CAACU,IAAV,CAAeC,UADP;AAEvBP,EAAAA,cAAc,EAAEJ,SAAS,CAACY,MAAV,CAAiBD;AAFV,CAAzB;AAKA,eAAeT,YAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport './body.scss';\n\nconst genres = ['All', 'Adventure', 'Comedy', 'Drama', 'Fantasy'];\n\nconst GenresFilter = ({ onFilterClick, selectedFilter }) => {\n  const [selected, setSelected] = useState(selectedFilter);\n\n  return (\n    <div className=\"genres-filter\">\n      {genres.map((genre) => (\n        <button\n          key={genre}\n          type=\"button\"\n          onClick={() => {\n            onFilterClick(genre);\n            setSelected(genre);\n          }}\n          className={`item ${genre === selected ? 'active' : ''}`}\n        >\n          {genre}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nGenresFilter.propTypes = {\n  onFilterClick: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n};\n\nexport default GenresFilter;\n"]},"metadata":{},"sourceType":"module"}