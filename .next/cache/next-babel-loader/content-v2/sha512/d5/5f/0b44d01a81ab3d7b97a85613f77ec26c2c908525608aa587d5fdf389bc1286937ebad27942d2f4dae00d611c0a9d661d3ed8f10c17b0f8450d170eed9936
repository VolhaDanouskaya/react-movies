{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport { loadMovies } from '../../store/actions/movies';\nimport styles from '../components/body/body.module.scss';\nimport GenresFilter from '../components/body/GenresFilter';\nimport MovieList from '../components/body/movieList/MovieList';\nimport MoviesSorter from '../components/body/MoviesSorter';\nimport ErrorBoundary from '../components/error/ErrorBoundary';\nimport useSessionStorage from '../hooks/useSessionStorage';\n\nvar Body = function Body(_ref) {\n  _s();\n\n  var movies = _ref.movies,\n      loadMovies = _ref.loadMovies;\n\n  var _useSessionStorage = useSessionStorage('filter'),\n      _useSessionStorage2 = _slicedToArray(_useSessionStorage, 2),\n      currentFilter = _useSessionStorage2[0],\n      setCurrentFilter = _useSessionStorage2[1];\n\n  var _useSessionStorage3 = useSessionStorage('sort'),\n      _useSessionStorage4 = _slicedToArray(_useSessionStorage3, 2),\n      currentSort = _useSessionStorage4[0],\n      setCurrentSort = _useSessionStorage4[1];\n\n  var searchQuery = useRouter().pathname; //useLocation().search;\n\n  var query = new URLSearchParams(searchQuery).get('search');\n  useEffect(function () {\n    loadMovies(currentFilter, currentSort, query);\n  }, [currentFilter, currentSort, query, loadMovies]);\n\n  var onFilterClick = function onFilterClick(genre) {\n    setCurrentFilter(genre);\n  };\n\n  var onSortChange = function onSortChange(sort) {\n    setCurrentSort(sort);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: styles.body,\n    fixed: true\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.submenu\n  }, /*#__PURE__*/React.createElement(GenresFilter, {\n    onFilterClick: onFilterClick,\n    selectedFilter: currentFilter\n  }), /*#__PURE__*/React.createElement(MoviesSorter, {\n    onSortChange: onSortChange,\n    selectedSort: currentSort\n  })), !(movies !== null && movies !== void 0 && movies.length) ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.noMovies\n  }, \"No Movies Found\")) : /*#__PURE__*/React.createElement(ErrorBoundary, null, /*#__PURE__*/React.createElement(MovieList, {\n    movies: movies\n  })));\n};\n\n_s(Body, \"PBLVb8mOmHwVU3CZNKxMh1DjfZ4=\", false, function () {\n  return [useSessionStorage, useSessionStorage, useRouter];\n});\n\n_c = Body;\nBody.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.arrayOf(PropTypes.string),\n    vote_average: PropTypes.number,\n    tagline: PropTypes.string,\n    vote_count: PropTypes.number,\n    overview: PropTypes.string,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n    runtime: PropTypes.number\n  })).isRequired,\n  loadMovies: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    movies: state.movies\n  };\n};\n\nvar mapDispatchToProps = {\n  loadMovies: loadMovies\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["C:/projects/react-trainings/react-movies/src/pages/movies.js"],"names":["React","useEffect","connect","Container","useRouter","PropTypes","Route","Switch","Redirect","useLocation","loadMovies","styles","GenresFilter","MovieList","MoviesSorter","ErrorBoundary","useSessionStorage","Body","movies","currentFilter","setCurrentFilter","currentSort","setCurrentSort","searchQuery","pathname","query","URLSearchParams","get","onFilterClick","genre","onSortChange","sort","body","submenu","length","noMovies","propTypes","arrayOf","shape","id","number","isRequired","title","string","poster_path","release_date","genres","vote_average","tagline","vote_count","overview","budget","revenue","runtime","func","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\n\nimport { connect } from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport { loadMovies } from '../../store/actions/movies';\n\nimport styles from '../components/body/body.module.scss';\nimport GenresFilter from '../components/body/GenresFilter';\nimport MovieList from '../components/body/movieList/MovieList';\nimport MoviesSorter from '../components/body/MoviesSorter';\nimport ErrorBoundary from '../components/error/ErrorBoundary';\nimport useSessionStorage from '../hooks/useSessionStorage';\n\nconst Body = ({ movies, loadMovies }) => {\n  const [currentFilter, setCurrentFilter] = useSessionStorage('filter');\n  const [currentSort, setCurrentSort] = useSessionStorage('sort');\n\n  const searchQuery = useRouter().pathname; //useLocation().search;\n  const query = new URLSearchParams(searchQuery).get('search');\n\n  useEffect(() => {\n    loadMovies(currentFilter, currentSort, query);\n  }, [currentFilter, currentSort, query, loadMovies]);\n\n  const onFilterClick = (genre) => {\n    setCurrentFilter(genre);\n  };\n\n  const onSortChange = (sort) => {\n    setCurrentSort(sort);\n  };\n\n  return (\n    <Container className={styles.body} fixed>\n      <div className={styles.submenu}>\n        <GenresFilter onFilterClick={onFilterClick} selectedFilter={currentFilter} />\n        <MoviesSorter onSortChange={onSortChange} selectedSort={currentSort} />\n      </div>\n      {!movies?.length ? (\n        <div>\n          <p className={styles.noMovies}>No Movies Found</p>\n        </div>\n      ) : (\n        <ErrorBoundary>\n          <MovieList movies={movies} />\n        </ErrorBoundary>\n      )}\n    </Container>\n  );\n};\n\nBody.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      genres: PropTypes.arrayOf(PropTypes.string),\n      vote_average: PropTypes.number,\n      tagline: PropTypes.string,\n      vote_count: PropTypes.number,\n      overview: PropTypes.string,\n      budget: PropTypes.number,\n      revenue: PropTypes.number,\n      runtime: PropTypes.number,\n    }),\n  ).isRequired,\n  loadMovies: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ movies: state.movies });\n\nconst mapDispatchToProps = {\n  loadMovies,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Body);\n"]},"metadata":{},"sourceType":"module"}