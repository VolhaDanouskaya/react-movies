{"ast":null,"code":"import { LOAD_MOVIES, ADD_MOVIE, UPDATE_MOVIE, DELETE_MOVIE, LOAD_MOVIES_SUCCCESS, LOAD_MOVIES_FAIL, ADD_MOVIE_SUCCESS, ADD_MOVIE_FAIL, UPDATE_MOVIE_SUCCESS, UPDATE_MOVIE_FAIL, DELETE_MOVIE_SUCCESS, DELETE_MOVIE_FAIL } from './types';\nexport var loadMovies = function loadMovies(filter, sort, query) {\n  return {\n    type: LOAD_MOVIES,\n    filter: filter,\n    sort: sort,\n    query: query\n  };\n};\nexport var loadMoviesSuccess = function loadMoviesSuccess(movies) {\n  return {\n    type: LOAD_MOVIES_SUCCCESS,\n    movies: movies\n  };\n};\nexport var loadMoviesFail = function loadMoviesFail(message) {\n  return {\n    type: LOAD_MOVIES_FAIL,\n    message: message\n  };\n};\nexport var addMovie = function addMovie(movie) {\n  return {\n    type: ADD_MOVIE,\n    movie: movie\n  };\n};\nexport var addMovieSuccess = function addMovieSuccess(movie) {\n  return {\n    type: ADD_MOVIE_SUCCESS,\n    movie: movie\n  };\n};\nexport var addMovieFail = function addMovieFail(message) {\n  return {\n    type: ADD_MOVIE_FAIL,\n    message: message\n  };\n};\nexport var updateMovie = function updateMovie(movie) {\n  return {\n    type: UPDATE_MOVIE,\n    movie: movie\n  };\n};\nexport var updateMovieSuccess = function updateMovieSuccess(movie) {\n  return {\n    type: UPDATE_MOVIE_SUCCESS,\n    movie: movie\n  };\n};\nexport var updateMovieFail = function updateMovieFail(message) {\n  return {\n    type: UPDATE_MOVIE_FAIL,\n    message: message\n  };\n};\nexport var deleteMovie = function deleteMovie(id) {\n  return {\n    type: DELETE_MOVIE,\n    id: id\n  };\n};\nexport var deleteMovieSuccess = function deleteMovieSuccess(id) {\n  return {\n    type: DELETE_MOVIE_SUCCESS,\n    id: id\n  };\n};\nexport var deleteMovieFail = function deleteMovieFail(message) {\n  return {\n    type: DELETE_MOVIE_FAIL,\n    message: message\n  };\n};","map":{"version":3,"sources":["C:/projects/react-trainings/react-movies/src/store/actions/movies.js"],"names":["LOAD_MOVIES","ADD_MOVIE","UPDATE_MOVIE","DELETE_MOVIE","LOAD_MOVIES_SUCCCESS","LOAD_MOVIES_FAIL","ADD_MOVIE_SUCCESS","ADD_MOVIE_FAIL","UPDATE_MOVIE_SUCCESS","UPDATE_MOVIE_FAIL","DELETE_MOVIE_SUCCESS","DELETE_MOVIE_FAIL","loadMovies","filter","sort","query","type","loadMoviesSuccess","movies","loadMoviesFail","message","addMovie","movie","addMovieSuccess","addMovieFail","updateMovie","updateMovieSuccess","updateMovieFail","deleteMovie","id","deleteMovieSuccess","deleteMovieFail"],"mappings":"AAAA,SACEA,WADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,YAJF,EAKEC,oBALF,EAMEC,gBANF,EAOEC,iBAPF,EAQEC,cARF,EASEC,oBATF,EAUEC,iBAVF,EAWEC,oBAXF,EAYEC,iBAZF,QAaO,SAbP;AAeA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAASC,IAAT,EAAeC,KAAf;AAAA,SAA0B;AAClDC,IAAAA,IAAI,EAAEhB,WAD4C;AAElDa,IAAAA,MAAM,EAANA,MAFkD;AAGlDC,IAAAA,IAAI,EAAJA,IAHkD;AAIlDC,IAAAA,KAAK,EAALA;AAJkD,GAA1B;AAAA,CAAnB;AAOP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD;AAAA,SAAa;AAC5CF,IAAAA,IAAI,EAAEZ,oBADsC;AAE5Cc,IAAAA,MAAM,EAANA;AAF4C,GAAb;AAAA,CAA1B;AAKP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD;AAAA,SAAc;AAC1CJ,IAAAA,IAAI,EAAEX,gBADoC;AAE1Ce,IAAAA,OAAO,EAAPA;AAF0C,GAAd;AAAA,CAAvB;AAKP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAY;AAClCN,IAAAA,IAAI,EAAEf,SAD4B;AAElCqB,IAAAA,KAAK,EAALA;AAFkC,GAAZ;AAAA,CAAjB;AAKP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACD,KAAD;AAAA,SAAY;AACzCN,IAAAA,IAAI,EAAEV,iBADmC;AAEzCgB,IAAAA,KAAK,EAALA;AAFyC,GAAZ;AAAA,CAAxB;AAKP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACJ,OAAD;AAAA,SAAc;AACxCJ,IAAAA,IAAI,EAAET,cADkC;AAExCa,IAAAA,OAAO,EAAPA;AAFwC,GAAd;AAAA,CAArB;AAKP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACH,KAAD;AAAA,SAAY;AACrCN,IAAAA,IAAI,EAAEd,YAD+B;AAErCoB,IAAAA,KAAK,EAALA;AAFqC,GAAZ;AAAA,CAApB;AAKP,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,KAAD;AAAA,SAAY;AAC5CN,IAAAA,IAAI,EAAER,oBADsC;AAE5Cc,IAAAA,KAAK,EAALA;AAF4C,GAAZ;AAAA,CAA3B;AAKP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACP,OAAD;AAAA,SAAc;AAC3CJ,IAAAA,IAAI,EAAEP,iBADqC;AAE3CW,IAAAA,OAAO,EAAPA;AAF2C,GAAd;AAAA,CAAxB;AAKP,OAAO,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD;AAAA,SAAS;AAClCb,IAAAA,IAAI,EAAEb,YAD4B;AAElC0B,IAAAA,EAAE,EAAFA;AAFkC,GAAT;AAAA,CAApB;AAKP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,EAAD;AAAA,SAAS;AACzCb,IAAAA,IAAI,EAAEN,oBADmC;AAEzCmB,IAAAA,EAAE,EAAFA;AAFyC,GAAT;AAAA,CAA3B;AAKP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACX,OAAD;AAAA,SAAc;AAC3CJ,IAAAA,IAAI,EAAEL,iBADqC;AAE3CS,IAAAA,OAAO,EAAPA;AAF2C,GAAd;AAAA,CAAxB","sourcesContent":["import {\n  LOAD_MOVIES,\n  ADD_MOVIE,\n  UPDATE_MOVIE,\n  DELETE_MOVIE,\n  LOAD_MOVIES_SUCCCESS,\n  LOAD_MOVIES_FAIL,\n  ADD_MOVIE_SUCCESS,\n  ADD_MOVIE_FAIL,\n  UPDATE_MOVIE_SUCCESS,\n  UPDATE_MOVIE_FAIL,\n  DELETE_MOVIE_SUCCESS,\n  DELETE_MOVIE_FAIL,\n} from './types';\n\nexport const loadMovies = (filter, sort, query) => ({\n  type: LOAD_MOVIES,\n  filter,\n  sort,\n  query,\n});\n\nexport const loadMoviesSuccess = (movies) => ({\n  type: LOAD_MOVIES_SUCCCESS,\n  movies,\n});\n\nexport const loadMoviesFail = (message) => ({\n  type: LOAD_MOVIES_FAIL,\n  message,\n});\n\nexport const addMovie = (movie) => ({\n  type: ADD_MOVIE,\n  movie,\n});\n\nexport const addMovieSuccess = (movie) => ({\n  type: ADD_MOVIE_SUCCESS,\n  movie,\n});\n\nexport const addMovieFail = (message) => ({\n  type: ADD_MOVIE_FAIL,\n  message,\n});\n\nexport const updateMovie = (movie) => ({\n  type: UPDATE_MOVIE,\n  movie,\n});\n\nexport const updateMovieSuccess = (movie) => ({\n  type: UPDATE_MOVIE_SUCCESS,\n  movie,\n});\n\nexport const updateMovieFail = (message) => ({\n  type: UPDATE_MOVIE_FAIL,\n  message,\n});\n\nexport const deleteMovie = (id) => ({\n  type: DELETE_MOVIE,\n  id,\n});\n\nexport const deleteMovieSuccess = (id) => ({\n  type: DELETE_MOVIE_SUCCESS,\n  id,\n});\n\nexport const deleteMovieFail = (message) => ({\n  type: DELETE_MOVIE_FAIL,\n  message,\n});\n"]},"metadata":{},"sourceType":"module"}