{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOAD_MOVIES_SUCCCESS, ADD_MOVIE_SUCCESS, UPDATE_MOVIE_FAIL, DELETE_MOVIE_FAIL, LOAD_MOVIES_FAIL, ADD_MOVIE_FAIL, UPDATE_MOVIE_SUCCESS, DELETE_MOVIE_SUCCESS } from '../actions/types';\n\nvar moviesReducer = function moviesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_MOVIES_SUCCCESS:\n      return action.movies;\n\n    case ADD_MOVIE_SUCCESS:\n      return [].concat(_toConsumableArray(state), [action.movie]);\n\n    case UPDATE_MOVIE_SUCCESS:\n      return state.map(function (movie) {\n        if (movie.id === action.movie.id) {\n          return _objectSpread({}, action.movie);\n        }\n\n        return movie;\n      });\n\n    case DELETE_MOVIE_SUCCESS:\n      return _toConsumableArray(state.filter(function (movie) {\n        return movie.id !== action.id;\n      }));\n\n    case LOAD_MOVIES_FAIL:\n    case ADD_MOVIE_FAIL:\n    case UPDATE_MOVIE_FAIL:\n    case DELETE_MOVIE_FAIL:\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;","map":{"version":3,"sources":["C:/projects/react-trainings/react-movies/src/store/reducers/movies.js"],"names":["LOAD_MOVIES_SUCCCESS","ADD_MOVIE_SUCCESS","UPDATE_MOVIE_FAIL","DELETE_MOVIE_FAIL","LOAD_MOVIES_FAIL","ADD_MOVIE_FAIL","UPDATE_MOVIE_SUCCESS","DELETE_MOVIE_SUCCESS","moviesReducer","state","action","type","movies","movie","map","id","filter"],"mappings":";;;;;;;AAAA,SACEA,oBADF,EAEEC,iBAFF,EAGEC,iBAHF,EAIEC,iBAJF,EAKEC,gBALF,EAMEC,cANF,EAOEC,oBAPF,EAQEC,oBARF,QASO,kBATP;;AAWA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,oBAAL;AACE,aAAOU,MAAM,CAACE,MAAd;;AACF,SAAKX,iBAAL;AACE,0CAAWQ,KAAX,IAAkBC,MAAM,CAACG,KAAzB;;AACF,SAAKP,oBAAL;AACE,aAAOG,KAAK,CAACK,GAAN,CAAU,UAACD,KAAD,EAAW;AAC1B,YAAIA,KAAK,CAACE,EAAN,KAAaL,MAAM,CAACG,KAAP,CAAaE,EAA9B,EAAkC;AAChC,mCACKL,MAAM,CAACG,KADZ;AAGD;;AACD,eAAOA,KAAP;AACD,OAPM,CAAP;;AAQF,SAAKN,oBAAL;AACE,gCAAWE,KAAK,CAACO,MAAN,CAAa,UAACH,KAAD;AAAA,eAAWA,KAAK,CAACE,EAAN,KAAaL,MAAM,CAACK,EAA/B;AAAA,OAAb,CAAX;;AACF,SAAKX,gBAAL;AACA,SAAKC,cAAL;AACA,SAAKH,iBAAL;AACA,SAAKC,iBAAL;AACA;AACE,aAAOM,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,aAAf","sourcesContent":["import {\n  LOAD_MOVIES_SUCCCESS,\n  ADD_MOVIE_SUCCESS,\n  UPDATE_MOVIE_FAIL,\n  DELETE_MOVIE_FAIL,\n  LOAD_MOVIES_FAIL,\n  ADD_MOVIE_FAIL,\n  UPDATE_MOVIE_SUCCESS,\n  DELETE_MOVIE_SUCCESS,\n} from '../actions/types';\n\nconst moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case LOAD_MOVIES_SUCCCESS:\n      return action.movies;\n    case ADD_MOVIE_SUCCESS:\n      return [...state, action.movie];\n    case UPDATE_MOVIE_SUCCESS:\n      return state.map((movie) => {\n        if (movie.id === action.movie.id) {\n          return {\n            ...action.movie,\n          };\n        }\n        return movie;\n      });\n    case DELETE_MOVIE_SUCCESS:\n      return [...state.filter((movie) => movie.id !== action.id)];\n    case LOAD_MOVIES_FAIL:\n    case ADD_MOVIE_FAIL:\n    case UPDATE_MOVIE_FAIL:\n    case DELETE_MOVIE_FAIL:\n    default:\n      return state;\n  }\n};\n\nexport default moviesReducer;\n"]},"metadata":{},"sourceType":"module"}