{"ast":null,"code":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route, BrowserRouter, Switch, StaticRouter } from 'react-router-dom'; // import '../components/error/error.scss';\n\nimport Body from '../components/body';\nimport PageNotFound from '../components/error/PageNotFound';\nimport Footer from '../components/footer/Footer';\nimport Header from '../components/header';\nimport Layout from '../components/layout/Layout';\nimport store from '../store/store';\nvar isServer = true;\n\nvar App = function App() {\n  if (isServer) {\n    return /*#__PURE__*/React.createElement(StaticRouter, null, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/pagenotfound\"\n    }, /*#__PURE__*/React.createElement(PageNotFound, null)), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\"\n    }, /*#__PURE__*/React.createElement(Provider, {\n      store: store\n    }, /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(Body, null), /*#__PURE__*/React.createElement(Footer, null))))));\n  }\n\n  return /*#__PURE__*/React.createElement(BrowserRouter, null, /*#__PURE__*/React.createElement(Layout, null, /*#__PURE__*/React.createElement(Switch, null, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/pagenotfound\"\n  }, /*#__PURE__*/React.createElement(PageNotFound, null)), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\"\n  }, /*#__PURE__*/React.createElement(Provider, {\n    store: store\n  }, /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(Body, null), /*#__PURE__*/React.createElement(Footer, null))))));\n};\n\nexport default App; // import React, { useEffect } from 'react';\n// import { Container } from '@material-ui/core';\n// import { useRouter } from 'next/router';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\n// import styles from '../components/body/body.module.scss';\n// import GenresFilter from '../components/body/GenresFilter';\n// import MovieList from '../components/body/movieList/MovieList';\n// import MoviesSorter from '../components/body/MoviesSorter';\n// import ErrorBoundary from '../components/error/ErrorBoundary';\n// import useSessionStorage from '../hooks/useSessionStorage';\n// import { loadMovies as loadMoviesAction } from '../store/actions/movies';\n// const Body = ({ movies, loadMovies }) => {\n//   const [currentFilter, setCurrentFilter] = useSessionStorage('filter');\n//   const [currentSort, setCurrentSort] = useSessionStorage('sort');\n//   const searchQuery = useRouter().pathname; // useLocation().search;\n//   const query = new URLSearchParams(searchQuery).get('search');\n//   useEffect(() => {\n//     loadMovies(currentFilter, currentSort, query);\n//   }, [currentFilter, currentSort, query, loadMovies]);\n//   const onFilterClick = (genre) => {\n//     setCurrentFilter(genre);\n//   };\n//   const onSortChange = (sort) => {\n//     setCurrentSort(sort);\n//   };\n//   return (\n//     <Container className={styles.body} fixed>\n//       <div className={styles.submenu}>\n//         <GenresFilter onFilterClick={onFilterClick} selectedFilter={currentFilter} />\n//         <MoviesSorter onSortChange={onSortChange} selectedSort={currentSort} />\n//       </div>\n//       {!movies?.length ? (\n//         <div>\n//           <p className={styles.noMovies}>No Movies Found</p>\n//         </div>\n//       ) : (\n//         <ErrorBoundary>\n//           <MovieList movies={movies} />\n//         </ErrorBoundary>\n//       )}\n//     </Container>\n//   );\n// };\n// Body.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//       poster_path: PropTypes.string,\n//       release_date: PropTypes.string,\n//       genres: PropTypes.arrayOf(PropTypes.string),\n//       vote_average: PropTypes.number,\n//       tagline: PropTypes.string,\n//       vote_count: PropTypes.number,\n//       overview: PropTypes.string,\n//       budget: PropTypes.number,\n//       revenue: PropTypes.number,\n//       runtime: PropTypes.number,\n//     }),\n//   ).isRequired,\n//   loadMovies: PropTypes.func.isRequired,\n// };\n// const mapStateToProps = (state) => ({ movies: state.movies });\n// const mapDispatchToProps = {\n//   loadMoviesAction,\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Body);","map":{"version":3,"sources":["C:/projects/react-trainings/react-movies/src/pages/movies.js"],"names":["React","ReactDOM","Provider","Route","BrowserRouter","Switch","StaticRouter","Body","PageNotFound","Footer","Header","Layout","store","isServer","App"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,YAAvC,QAA2D,kBAA3D,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,IAAMC,QAAQ,OAAd;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAID,QAAJ,EAAc;AACZ,wBACE,oBAAC,YAAD,qBACE,oBAAC,MAAD,qBACE,oBAAC,MAAD,qBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC;AAAlB,oBACE,oBAAC,YAAD,OADF,CADF,eAIE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC;AAAZ,oBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAED;AAAjB,oBACE,oBAAC,MAAD,OADF,eAEE,oBAAC,IAAD,OAFF,eAGE,oBAAC,MAAD,OAHF,CADF,CAJF,CADF,CADF,CADF;AAkBD;;AACD,sBACE,oBAAC,aAAD,qBACE,oBAAC,MAAD,qBACE,oBAAC,MAAD,qBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC;AAAlB,kBACE,oBAAC,YAAD,OADF,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC;AAAZ,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEA;AAAjB,kBACE,oBAAC,MAAD,OADF,eAEE,oBAAC,IAAD,OAFF,eAGE,oBAAC,MAAD,OAHF,CADF,CAJF,CADF,CADF,CADF;AAkBD,CAvCD;;AAyCA,eAAeE,GAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route, BrowserRouter, Switch, StaticRouter } from 'react-router-dom';\n\n// import '../components/error/error.scss';\nimport Body from '../components/body';\nimport PageNotFound from '../components/error/PageNotFound';\nimport Footer from '../components/footer/Footer';\nimport Header from '../components/header';\nimport Layout from '../components/layout/Layout';\nimport store from '../store/store';\n\nconst isServer = typeof window === 'undefined';\n\nconst App = () => {\n  if (isServer) {\n    return (\n      <StaticRouter>\n        <Layout>\n          <Switch>\n            <Route exact path=\"/pagenotfound\">\n              <PageNotFound />\n            </Route>\n            <Route path=\"/\">\n              <Provider store={store}>\n                <Header />\n                <Body />\n                <Footer />\n              </Provider>\n            </Route>\n          </Switch>\n        </Layout>\n      </StaticRouter>\n    );\n  }\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/pagenotfound\">\n            <PageNotFound />\n          </Route>\n          <Route path=\"/\">\n            <Provider store={store}>\n              <Header />\n              <Body />\n              <Footer />\n            </Provider>\n          </Route>\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n\n// import React, { useEffect } from 'react';\n\n// import { Container } from '@material-ui/core';\n// import { useRouter } from 'next/router';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\n\n// import styles from '../components/body/body.module.scss';\n// import GenresFilter from '../components/body/GenresFilter';\n// import MovieList from '../components/body/movieList/MovieList';\n// import MoviesSorter from '../components/body/MoviesSorter';\n// import ErrorBoundary from '../components/error/ErrorBoundary';\n// import useSessionStorage from '../hooks/useSessionStorage';\n// import { loadMovies as loadMoviesAction } from '../store/actions/movies';\n\n// const Body = ({ movies, loadMovies }) => {\n//   const [currentFilter, setCurrentFilter] = useSessionStorage('filter');\n//   const [currentSort, setCurrentSort] = useSessionStorage('sort');\n\n//   const searchQuery = useRouter().pathname; // useLocation().search;\n//   const query = new URLSearchParams(searchQuery).get('search');\n\n//   useEffect(() => {\n//     loadMovies(currentFilter, currentSort, query);\n//   }, [currentFilter, currentSort, query, loadMovies]);\n\n//   const onFilterClick = (genre) => {\n//     setCurrentFilter(genre);\n//   };\n\n//   const onSortChange = (sort) => {\n//     setCurrentSort(sort);\n//   };\n\n//   return (\n//     <Container className={styles.body} fixed>\n//       <div className={styles.submenu}>\n//         <GenresFilter onFilterClick={onFilterClick} selectedFilter={currentFilter} />\n//         <MoviesSorter onSortChange={onSortChange} selectedSort={currentSort} />\n//       </div>\n//       {!movies?.length ? (\n//         <div>\n//           <p className={styles.noMovies}>No Movies Found</p>\n//         </div>\n//       ) : (\n//         <ErrorBoundary>\n//           <MovieList movies={movies} />\n//         </ErrorBoundary>\n//       )}\n//     </Container>\n//   );\n// };\n\n// Body.propTypes = {\n//   movies: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//       poster_path: PropTypes.string,\n//       release_date: PropTypes.string,\n//       genres: PropTypes.arrayOf(PropTypes.string),\n//       vote_average: PropTypes.number,\n//       tagline: PropTypes.string,\n//       vote_count: PropTypes.number,\n//       overview: PropTypes.string,\n//       budget: PropTypes.number,\n//       revenue: PropTypes.number,\n//       runtime: PropTypes.number,\n//     }),\n//   ).isRequired,\n//   loadMovies: PropTypes.func.isRequired,\n// };\n\n// const mapStateToProps = (state) => ({ movies: state.movies });\n\n// const mapDispatchToProps = {\n//   loadMoviesAction,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Body);\n"]},"metadata":{},"sourceType":"module"}